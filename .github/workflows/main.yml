# This is a basic workflow to help you get started with Actions

name: Unity CI # https://github.com/webbertakken/unity-actions

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ develop, master, release ]
  pull_request:
    branches: [ develop, master, release ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

    # Activate
     # Request manual activation file and upload artifact
     # Activate uploaded artifact at: https://license.unity3d.com/manual
     # then add as UNITY_LICESE secret in repo.
    #- name: Request manual activation file
    #  id: getManualLicenseFile
    #  uses: webbertakken/unity-request-manual-activation-file@v1.1
    #  with:
    #    unityVersion: 2019.3.4f1
    #- name: Expose as artifact
    #  uses: actions/upload-artifact@v1
    #  with:
    #    name: ${{ steps.getManualLicenseFile.outputs.filePath }}
    #    path: ${{ steps.getManualLicenseFile.outputs.filePath }}

    # Activate unity license (For debugging activation)
    #- name: Activate Unity
    #  uses: webbertakken/unity-activate@v1.2
    #  env:
    #   UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
    #  with:
    #    unityVersion: 2019.3.4f1

  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Clone Repo
      uses: actions/checkout@v2
    - name: Checkout submodules
      uses: textbook/git-checkout-submodule-action@master

    # Cache unity Library folder from previous builds.
    - name: Restore Unity Library Folder
      uses: actions/cache@v1.1.0
      with:
        path: ./UnityExample/Library
        key: Library-UnityTestPilot-UNITY_STANDALONE_LINUX
        restore-keys:  |
          Library-UnityTestPilot-
    
    # Test
    - name: Run Unity Tests
      uses: AnImaginedReality/UntiyTestRunner.Action@v1.6.1 
      env:
        UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      with:
        projectPath: ./UnityExample/
        unityVersion: 2019.3.4f1

    - name: Save Test Result Artifacts 
      uses: actions/upload-artifact@v1
      with:
          name: Test results
          path: artifacts
          
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Clone Repo
      uses: actions/checkout@v2        
    - name: Checkout submodules
      uses: textbook/git-checkout-submodule-action@master
      
    # Cache unity Library folder from previous builds.
    - name: Restore Unity Library Folder
      uses: actions/cache@v1.1.0
      with:
        path: ./UnityExample/Library
        key: Library-Hex-UNITY_STANDALONE_LINUX
        restore-keys:  |
          Library-HEX-
    # Build
    - name: Run Unity Build 
      uses: webbertakken/unity-builder@v0.11
      env:
        UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      with:
        projectPath: ./UnityExample/
        unityVersion: 2019.3.4f1
        targetPlatform: StandaloneWindows64
